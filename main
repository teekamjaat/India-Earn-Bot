const TelegramBot = require('node-telegram-bot-api');
const axios = require('axios');
const fs = require('fs');

const express = require('express');
const app = express();

app.get('/', (req, res) => {
  res.send('Hello World!');
});

const port = 3000;
app.listen(port, () => {
  console.log(`Server running at http://localhost:${port}`);
});

// Retrieve the Telegram bot token from the environment variable
const botToken = process.env.TELEGRAM_BOT_TOKEN;

// Create the Telegram bot instance
const bot = new TelegramBot(botToken, { polling: true });

// Handle /start command
bot.onText(/\/start/, (msg) => {
  const chatId = msg.chat.id;
  const username = msg.from.username;
  const welcomeMessage = `Hello, ${username}!\n\n`
    + '𝐈 𝐀𝐦 indiaearnx.com, 𝐁𝐮𝐥𝐤 𝐋𝐢𝐧𝐤 𝐂𝐨𝐧𝐯𝐞𝐫𝐭𝐞𝐫. 𝐈 𝐂𝐚𝐧 𝐂𝐨𝐧𝐯𝐞𝐫𝐭 𝐋𝐢𝐧𝐤𝐬 𝐃𝐢𝐫𝐞𝐜𝐭𝐥𝐲 𝐅𝐫𝐨𝐦 𝐘𝐨𝐮𝐫 urlshortxyz.xyz 𝐀𝐜𝐜𝐨𝐮𝐧𝐭\n\n'
    + '1. Go To 👉 https:/indiaearnx.com/member/tools/api \n\n'
    + '2. Than Copy API Key.\n\n'              + '3. Than Type /setapi than give a single space and than paste your API Key (see example to understand more).\n\n'
    +'/setapi(space)API Key\n\nExample 👉\n\n/setapi 0a2cfa89d2c2d38ba6a6fda3e3d493d096a6a9c7\n\n'
  
    bot.sendMessage(chatId, welcomeMessage);
});


// Command: /setarklinks
bot.onText(/\/setapi (.+)/, (msg, match) => {
  const chatId = msg.chat.id;
  const userToken = match[1].trim(); // Get the API token provided by the user

  // Save the user's MyBios API token to the database
  saveUserToken(chatId, userToken);

  const response = `𝐈𝐧𝐝𝐢𝐚 𝐄𝐚𝐫𝐧 𝐀𝐏𝐈 𝐭𝐨𝐤𝐞𝐧 𝐬𝐞𝐭 𝐬𝐮𝐜𝐜𝐞𝐬𝐬𝐟𝐮𝐥𝐥𝐲. 𝐘𝐨𝐮𝐫 𝐭𝐨𝐤𝐞𝐧: ${userToken}`;
  bot.sendMessage(chatId, response);
});

// Listen for any message (not just commands)
bot.on('message', (msg) => {
  const chatId = msg.chat.id;
  const messageText = msg.text;

  // If the message starts with "http://" or "https://", assume it's a URL and try to shorten it
  if (messageText && (messageText.startsWith('http://') || messageText.startsWith('https://'))) {
    shortenUrlAndSend(chatId, messageText);
  }
});

// Function to shorten the URL and send the result
async function shortenUrlAndSend(chatId, Url) {
  // Retrieve the user's MyBios API token from the database
  const arklinksToken = getUserToken(chatId);

  if (!arklinksToken) {
    bot.sendMessage(chatId, 'Please provide your India Earn API token first. Use the command:/set /setarklinYOUR_MYBIOS_API_TOKEN');
    return;
  }

  try {
    const apiUrl = `https://indiaearnx.com/api?api=${arklinksToken}&url=${Url}`;

    // Make a request to the MyBios API to shorten the URL
    const response = await axios.get(apiUrl);
    const shortUrl = response.data.shortenedUrl;


    const responseMessage = `Shortened URL: ${shortUrl}`;
    bot.sendMessage(chatId, responseMessage);
  } catch (error) {
    console.error('Shorten URL Error:', error);
    bot.sendMessage(chatId, 'An error occurred while shortening the URL. Please check your API token and try again.');
  }
}

// Function to validate the URL format
function isValidUrl(url) {
  const urlPattern = /^(|ftp|http|https):\/\/[^ "]+$/;
  return urlPattern.test(url);
}

// Function to save user's MyBios API token to the database (Replit JSON database)
function saveUserToken(chatId, token) {
  const dbData = getDatabaseData();
  dbData[chatId] = token;
  fs.writeFileSync('database.json', JSON.stringify(dbData, null, 2));
}

// Function to retrieve user's MyBios API token from the database
function getUserToken(chatId) {
  const dbData = getDatabaseData();
  return dbData[chatId];
}

// Function to read the database file and parse the JSON data
function getDatabaseData() {
  try {
    return JSON.parse(fs.readFileSync('database.json', 'utf8'));
  } catch (error) {
    // Return an empty object if the file doesn't exist or couldn't be parsed
    return {};
  }
}
